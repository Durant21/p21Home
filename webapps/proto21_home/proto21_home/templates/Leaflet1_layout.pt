<!DOCTYPE html>
<html lang="en">
<head>
  <title>Proto21.com</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <style>
    /* Remove the navbar's default margin-bottom and rounded borders */
    .navbar {
      margin-bottom: 0;
      border-radius: 0;
    }

    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 450px}

    /* Set gray background color and 100% height */
    .sidenav {
      padding-top: 20px;
      background-color: #f1f1f1;
      height: 100%;
    }

    /* Set black background color, white text and some padding */
    footer {
      background-color: #555;
      color: white;
      padding: 15px;
    }

    /* On small screens, set height to 'auto' for sidenav and grid */
    @media screen and (max-width: 767px) {
      .sidenav {
        height: auto;
        padding: 15px;

      }

      .row.content {height:auto;}
    }
    .stickyfooter {
            /*position: fixed;*/
            left: 0;
            bottom: 0;
            height: 100px;
            width: 100%;
            background-color: dimgray;
            color: white;
            text-align: right;
            padding-right: 50px;
            padding-top: 5px;
            font-size: large;
        }

        /*a:link {*/
            /*color: white;*/
        /*}*/

    .leftpanelphoto {

            }
  </style>
</head>


<body>

<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <!--?<a class="navbar-brand" href="/">Logo</a>-->
        <a href="/" >
                     <img src="/images/Proto21_logo.jpg" alt="image" style="max-width:50%;height:auto;">
        </a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <!--?<ul class="nav navbar-nav">-->
        <!--?<li class="active"><a href="#">Home</a></li>-->
        <!--?<li><a href="#">About</a></li>-->
        <!--?<li><a href="#">Projects</a></li>-->
        <!--?<li><a href="#">Contact</a></li>-->
      <!--?</ul>-->
      <ul class="nav navbar-nav navbar-right">
        <li><a href="/images/Proto21_logo.jpg">
            <!--?<span class="glyphicon glyphicon-log-in"></span> -->
            Login</a></li>
      </ul>
    </div>
  </div>
</nav>

<div class="container-fluid text-center">
  <div class="row content">
    <div class="col-sm-2 sidenav">
      <!--?<p><a href="#">Link</a></p>-->
      <!--?<p><a href="#">Link</a></p>-->
      <!--?<p><a href="#">Link</a></p>-->
    </div>
    <div class="col-sm-8 text-left">
          <h1>Python Web Development (GIS) <span style="font-weight:bold; color:dodgerblue;  font-size: smaller"> </span></h1>
            <p>We'll use Python and Leaflet to create the base of our Geographic Information System.</p>
        <br>
        <span style="font-weight:bold; color:red;  font-size: smaller">
            This page is still under construction...
        </span>
        <br>
        <!--?In part1 and part2, we built our 3-part prototype of authentication by adding an API-->
        <!--?to a basic website that accepts, hashes, stores and verifies a user name and password. -->
        <!--?Then, we demonstrate how to restrict access to an API to only <i>authenticated</i> -->
        <!--?users.-->
        <br>
        In this prototype, we will demonstrate the use of Leaflet mapping technology to display spatial data.
        <br>

        Objective(s):

        <br><br>
        Notable packages:<br>
        <ul>
            <!--?<li><a href="https://bower.io/">Bower</a> - Collect and maintain needed libraries and packages.</li>-->
            <!--?<li><a href="https://docs.pylonsproject.org/projects/pyramid_handlers/en/latest/">Pyramid_handlers</a> - As the site grows, this package helps manage the many routes we'll need to create.</li>-->
            <!--?<li><a href="https://www.sqlalchemy.org/">Sqlalchemy</a> - We'll use this toolkit to create and manage a local sqlite database.</li>-->
            <!--?<li><a href="https://passlib.readthedocs.io/en/stable/">passlib</a> - This hashing library will increase the security of our user information.</li>-->
        </ul>

        What you will need: <br>
        <ul style="list-style-type:none">
          <li>Python 3.x and a browser.</li>
        </ul>

       <br>
        <h3>Step 1: Clone the git project</h3>

        Git clone https://github.com/Durant21/python_leaflet.git<br>

        change directory into the resulting project<br>
        <code>
            $ cd python_leaflet<br>
        </code>

        Create a virtual env <br>
        <code>
            $ python3 -m venv --copies .env
        </code>
        <br>
        Activate the .env <br>
        <code>
            $ . .env/bin/activate
        </code>
        <br>
        Verify the location of the python library<br>
        <code>
        $ which python<br>
        /Users/dantefernandez/Projects/PythonScripts/Proto21_tests/python_leaflet/.env/bin/python<br>
        </code>

        <br>
        Complete the installation of the Pyramid framework<br>
        <code>
        $ python setup.py develop<br>
        </code>

        <br>
        Run the application<br>
        <code>
            $ pserve development.ini<br>
            Starting server in PID 26688.<br>
            Serving on http://localhost:6543<br>
            Serving on http://localhost:6543<br>

        </code>
        <br><br>

        This prototype is a simple application for displaying and querying geospatial information. <br>
        The source of geospatial information will often contain descriptive data or linked data that <br>
        can be displayed in tabular or graphic form.  We will use JQuery tables and Google charts to <br>
        display our data.
        <br><br>

        <img src="/images/leaflet1.jpg" alt="Picture Description" style="width:80%">

        <br><br>
        <h3>Step 2: Review the spatial data</h3>

        There are many sources of spatial data we can take advantage of.<br>
        With Leaflet, we can consume and display data within a CSV file, a GeoJSON file, as well as services such
        as GeoServer.

        <br><br>
        Within the project /data folder, you will find a Stations_CentralNM.csv file.  This file contains comma-delimited
        location information about USGS stations.  The file contains various information for each site but the columns we're interested in are
        SiteLongitude,SiteLatitude.  We'll use these to establish the X,Y for each location, as well as to populate a table grid linked to the map.
        <br><br>
        <img src="/images/stations_centralNM_csv.jpg" alt="Picture Description" style="width:80%">

        <br><br>
        NHDFlowLine_sub.geojason is a GeoJason file.  GeoJSON is a format for encoding a variety of geographic data structures.
        We'll use this format to add line segments (Rivers and Streams) to our map.

        <br><br>

        <img src="/images/leaflet_geojson1.jpg" alt="Picture Description" style="width:80%">
        <br><br>

        <h3>Step 3: Review the API's to call station point data</h3>

        Our project contains /api/Stations_api.py which we'll use to call and retreive point data from Stations_CentralNM.csv
        and return it to the calling JQuery in the form of json data.  Specifically, we'll call the all_stations() method, shown below.
        <br><br>
        < code >
        <br><br>

        <h3>Step 4: Review the Leaflet method for loading GeoJson data</h3>
        <br><br>
        < code >
        <br><br>

        <h3>Step 5: Review the Leaflet method for loading GeoServer data</h3>
        <br><br>
        < code >
        <br><br>


        <br><br>
<h4 style="color:blue">Source(s):</h4>
          These prototypes lean heavily on <a href="https://training.talkpython.fm/">TalkPython Training</a>  and <a href="https://www.fullstackpython.com/">Full Stack Python</a>

        <br>    <br><br><br>



    </div>


    <div class="col-sm-2 sidenav">
      <!--?<div class="well">-->
        <!--?<p>ADS</p>-->
      <!--?</div>-->
      <!--?<div class="well">-->
        <!--?<p>ADS</p>-->
      <!--?</div>-->
    </div>
  </div>
</div>

<footer class="stickyfooter">
  <a href="about_author" style="color:white;">Dante Fernandez</a>
</footer>

</body>
</html>